/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package cn.edu.tsinghua.tsfile.formatV30;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class RowGroupBlockMetaDataV30 implements org.apache.thrift.TBase<RowGroupBlockMetaDataV30, RowGroupBlockMetaDataV30._Fields>, java.io.Serializable, Cloneable, Comparable<RowGroupBlockMetaDataV30> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RowGroupBlockMetaDataV30");

  private static final org.apache.thrift.protocol.TField ROW_GROUPS_METADATA_FIELD_DESC = new org.apache.thrift.protocol.TField("row_groups_metadata", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField DELTA_OBJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("delta_object_id", org.apache.thrift.protocol.TType.STRING, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new RowGroupBlockMetaDataV30StandardSchemeFactory());
    schemes.put(TupleScheme.class, new RowGroupBlockMetaDataV30TupleSchemeFactory());
  }

  public List<RowGroupMetaDataV30> row_groups_metadata; // required
  public String delta_object_id; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ROW_GROUPS_METADATA((short)1, "row_groups_metadata"),
    DELTA_OBJECT_ID((short)2, "delta_object_id");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ROW_GROUPS_METADATA
          return ROW_GROUPS_METADATA;
        case 2: // DELTA_OBJECT_ID
          return DELTA_OBJECT_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.DELTA_OBJECT_ID};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ROW_GROUPS_METADATA, new org.apache.thrift.meta_data.FieldMetaData("row_groups_metadata", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, RowGroupMetaDataV30.class))));
    tmpMap.put(_Fields.DELTA_OBJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("delta_object_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RowGroupBlockMetaDataV30.class, metaDataMap);
  }

  public RowGroupBlockMetaDataV30() {
  }

  public RowGroupBlockMetaDataV30(
    List<RowGroupMetaDataV30> row_groups_metadata)
  {
    this();
    this.row_groups_metadata = row_groups_metadata;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public RowGroupBlockMetaDataV30(RowGroupBlockMetaDataV30 other) {
    if (other.isSetRow_groups_metadata()) {
      List<RowGroupMetaDataV30> __this__row_groups_metadata = new ArrayList<RowGroupMetaDataV30>(other.row_groups_metadata.size());
      for (RowGroupMetaDataV30 other_element : other.row_groups_metadata) {
        __this__row_groups_metadata.add(new RowGroupMetaDataV30(other_element));
      }
      this.row_groups_metadata = __this__row_groups_metadata;
    }
    if (other.isSetDelta_object_id()) {
      this.delta_object_id = other.delta_object_id;
    }
  }

  public RowGroupBlockMetaDataV30 deepCopy() {
    return new RowGroupBlockMetaDataV30(this);
  }

  @Override
  public void clear() {
    this.row_groups_metadata = null;
    this.delta_object_id = null;
  }

  public int getRow_groups_metadataSize() {
    return (this.row_groups_metadata == null) ? 0 : this.row_groups_metadata.size();
  }

  public java.util.Iterator<RowGroupMetaDataV30> getRow_groups_metadataIterator() {
    return (this.row_groups_metadata == null) ? null : this.row_groups_metadata.iterator();
  }

  public void addToRow_groups_metadata(RowGroupMetaDataV30 elem) {
    if (this.row_groups_metadata == null) {
      this.row_groups_metadata = new ArrayList<RowGroupMetaDataV30>();
    }
    this.row_groups_metadata.add(elem);
  }

  public List<RowGroupMetaDataV30> getRow_groups_metadata() {
    return this.row_groups_metadata;
  }

  public RowGroupBlockMetaDataV30 setRow_groups_metadata(List<RowGroupMetaDataV30> row_groups_metadata) {
    this.row_groups_metadata = row_groups_metadata;
    return this;
  }

  public void unsetRow_groups_metadata() {
    this.row_groups_metadata = null;
  }

  /** Returns true if field row_groups_metadata is set (has been assigned a value) and false otherwise */
  public boolean isSetRow_groups_metadata() {
    return this.row_groups_metadata != null;
  }

  public void setRow_groups_metadataIsSet(boolean value) {
    if (!value) {
      this.row_groups_metadata = null;
    }
  }

  public String getDelta_object_id() {
    return this.delta_object_id;
  }

  public RowGroupBlockMetaDataV30 setDelta_object_id(String delta_object_id) {
    this.delta_object_id = delta_object_id;
    return this;
  }

  public void unsetDelta_object_id() {
    this.delta_object_id = null;
  }

  /** Returns true if field delta_object_id is set (has been assigned a value) and false otherwise */
  public boolean isSetDelta_object_id() {
    return this.delta_object_id != null;
  }

  public void setDelta_object_idIsSet(boolean value) {
    if (!value) {
      this.delta_object_id = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ROW_GROUPS_METADATA:
      if (value == null) {
        unsetRow_groups_metadata();
      } else {
        setRow_groups_metadata((List<RowGroupMetaDataV30>)value);
      }
      break;

    case DELTA_OBJECT_ID:
      if (value == null) {
        unsetDelta_object_id();
      } else {
        setDelta_object_id((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ROW_GROUPS_METADATA:
      return getRow_groups_metadata();

    case DELTA_OBJECT_ID:
      return getDelta_object_id();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ROW_GROUPS_METADATA:
      return isSetRow_groups_metadata();
    case DELTA_OBJECT_ID:
      return isSetDelta_object_id();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof RowGroupBlockMetaDataV30)
      return this.equals((RowGroupBlockMetaDataV30)that);
    return false;
  }

  public boolean equals(RowGroupBlockMetaDataV30 that) {
    if (that == null)
      return false;

    boolean this_present_row_groups_metadata = true && this.isSetRow_groups_metadata();
    boolean that_present_row_groups_metadata = true && that.isSetRow_groups_metadata();
    if (this_present_row_groups_metadata || that_present_row_groups_metadata) {
      if (!(this_present_row_groups_metadata && that_present_row_groups_metadata))
        return false;
      if (!this.row_groups_metadata.equals(that.row_groups_metadata))
        return false;
    }

    boolean this_present_delta_object_id = true && this.isSetDelta_object_id();
    boolean that_present_delta_object_id = true && that.isSetDelta_object_id();
    if (this_present_delta_object_id || that_present_delta_object_id) {
      if (!(this_present_delta_object_id && that_present_delta_object_id))
        return false;
      if (!this.delta_object_id.equals(that.delta_object_id))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(RowGroupBlockMetaDataV30 other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetRow_groups_metadata()).compareTo(other.isSetRow_groups_metadata());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRow_groups_metadata()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.row_groups_metadata, other.row_groups_metadata);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDelta_object_id()).compareTo(other.isSetDelta_object_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDelta_object_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.delta_object_id, other.delta_object_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("RowGroupBlockMetaDataV30(");
    boolean first = true;

    sb.append("row_groups_metadata:");
    if (this.row_groups_metadata == null) {
      sb.append("null");
    } else {
      sb.append(this.row_groups_metadata);
    }
    first = false;
    if (isSetDelta_object_id()) {
      if (!first) sb.append(", ");
      sb.append("delta_object_id:");
      if (this.delta_object_id == null) {
        sb.append("null");
      } else {
        sb.append(this.delta_object_id);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (row_groups_metadata == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'row_groups_metadata' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class RowGroupBlockMetaDataV30StandardSchemeFactory implements SchemeFactory {
    public RowGroupBlockMetaDataV30StandardScheme getScheme() {
      return new RowGroupBlockMetaDataV30StandardScheme();
    }
  }

  private static class RowGroupBlockMetaDataV30StandardScheme extends StandardScheme<RowGroupBlockMetaDataV30> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, RowGroupBlockMetaDataV30 struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ROW_GROUPS_METADATA
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list48 = iprot.readListBegin();
                struct.row_groups_metadata = new ArrayList<RowGroupMetaDataV30>(_list48.size);
                for (int _i49 = 0; _i49 < _list48.size; ++_i49)
                {
                  RowGroupMetaDataV30 _elem50;
                  _elem50 = new RowGroupMetaDataV30();
                  _elem50.read(iprot);
                  struct.row_groups_metadata.add(_elem50);
                }
                iprot.readListEnd();
              }
              struct.setRow_groups_metadataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DELTA_OBJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.delta_object_id = iprot.readString();
              struct.setDelta_object_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, RowGroupBlockMetaDataV30 struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.row_groups_metadata != null) {
        oprot.writeFieldBegin(ROW_GROUPS_METADATA_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.row_groups_metadata.size()));
          for (RowGroupMetaDataV30 _iter51 : struct.row_groups_metadata)
          {
            _iter51.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.delta_object_id != null) {
        if (struct.isSetDelta_object_id()) {
          oprot.writeFieldBegin(DELTA_OBJECT_ID_FIELD_DESC);
          oprot.writeString(struct.delta_object_id);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class RowGroupBlockMetaDataV30TupleSchemeFactory implements SchemeFactory {
    public RowGroupBlockMetaDataV30TupleScheme getScheme() {
      return new RowGroupBlockMetaDataV30TupleScheme();
    }
  }

  private static class RowGroupBlockMetaDataV30TupleScheme extends TupleScheme<RowGroupBlockMetaDataV30> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, RowGroupBlockMetaDataV30 struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      {
        oprot.writeI32(struct.row_groups_metadata.size());
        for (RowGroupMetaDataV30 _iter52 : struct.row_groups_metadata)
        {
          _iter52.write(oprot);
        }
      }
      BitSet optionals = new BitSet();
      if (struct.isSetDelta_object_id()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetDelta_object_id()) {
        oprot.writeString(struct.delta_object_id);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, RowGroupBlockMetaDataV30 struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.row_groups_metadata = new ArrayList<RowGroupMetaDataV30>(_list53.size);
        for (int _i54 = 0; _i54 < _list53.size; ++_i54)
        {
          RowGroupMetaDataV30 _elem55;
          _elem55 = new RowGroupMetaDataV30();
          _elem55.read(iprot);
          struct.row_groups_metadata.add(_elem55);
        }
      }
      struct.setRow_groups_metadataIsSet(true);
      BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        struct.delta_object_id = iprot.readString();
        struct.setDelta_object_idIsSet(true);
      }
    }
  }

}

